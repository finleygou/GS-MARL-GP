# scenarios.py
# This file contains the Scenarios class with hardcoded data from the provided CSV, rounded to 2 decimal places, for 6 agents.

class Scenarios:
    data = {
        0: {
            'obstacles': [(-0.59, 2.11), (0.29, -0.94), (-0.22, 1.76), (-0.07, -0.93), (-0.05, 1.28), (0.77, -1.57)],
            'egos': [(-0.65, -2.70), (-0.56, -2.15), (-0.50, -0.78), (-0.63, 1.00), (1.21, -0.73), (-2.81, -1.62)],
            'targets': [(0.03, -1.51), (-1.86, -2.12), (-1.28, -0.14), (-1.40, -0.54), (-1.71, -0.39), (1.21, 1.18)],
        },
        1: {
            'obstacles': [(-2.12, 0.30), (-1.81, 0.81), (-0.39, -1.65), (-1.48, 2.01), (-0.38, 1.03), (-1.43, 0.18)],
            'egos': [(-0.14, 0.38), (0.91, 0.27), (-2.15, -1.53), (1.91, 0.29), (2.10, 1.19), (-2.38, -2.14)],
            'targets': [(-0.25, 2.10), (1.65, 1.32), (-1.61, 0.53), (1.31, -1.93), (2.08, -0.73), (0.16, 0.68)],
        },
        2: {
            'obstacles': [(2.21, 0.61), (-2.19, -0.58), (0.12, -0.86), (2.15, -0.36), (0.60, -2.14), (-1.02, -1.62)],
            'egos': [(1.73, 2.56), (-1.58, -2.36), (-2.42, 1.79), (-2.35, 0.27), (-0.58, 0.41), (2.56, 1.05)],
            'targets': [(0.26, -1.27), (-0.11, -0.33), (0.96, -1.18), (0.66, -0.99), (-0.78, 1.61), (1.54, -0.63)],
        },
        3: {
            'obstacles': [(-0.59, 1.29), (1.65, 1.68), (-2.05, -1.14), (1.10, -2.16), (0.25, 0.31), (-1.76, 0.49)],
            'egos': [(-2.42, 0.51), (-2.71, 0.38), (-1.27, -2.56), (-1.57, 1.43), (2.02, -0.33), (0.29, 0.60)],
            'targets': [(1.05, -0.67), (0.36, 1.95), (0.98, 1.20), (-2.23, 2.19), (0.95, -1.15), (0.41, -1.62)],
        },
        4: {
            'obstacles': [(0.34, -1.70), (-2.15, -0.62), (-0.88, -1.89), (-0.54, 1.83), (-1.07, 1.08), (1.00, -1.96)],
            'egos': [(-2.80, 1.89), (1.36, 2.71), (1.65, -0.10), (0.29, 2.56), (-1.22, -0.31), (0.40, 1.51)],
            'targets': [(2.07, 0.72), (-2.24, -1.81), (-0.33, -0.36), (-0.08, -0.61), (-0.53, -0.89), (-1.91, 2.13)],
        },
        # 5: {
        #     'obstacles': [(-1.72, 2.19), (0.50, -0.96), (1.07, -2.18), (0.73, 2.23), (-0.49, 0.37), (2.16, 0.16)],
        #     'egos': [(2.52, 0.35), (0.79, 0.80), (-1.41, 0.48), (-2.27, -2.55), (2.21, -2.76), (-2.53, -0.90)],
        #     'targets': [(1.79, -2.00), (-0.08, 0.63), (1.34, 0.29), (0.88, 0.76), (-1.71, 0.61), (1.02, -1.32)],
        # },
        # 6: {
        #     'obstacles': [(-1.35, -2.04), (-1.58, -1.06), (0.04, -1.57), (0.16, 1.62), (1.96, -0.86), (1.59, -2.25)],
        #     'egos': [(0.84, 0.84), (1.82, -1.97), (-1.09, 1.55), (2.12, 2.42), (1.99, 2.10), (-0.51, 0.30)],
        #     'targets': [(0.54, 1.51), (-1.58, -0.26), (0.97, 0.76), (0.38, 0.85), (1.09, 1.11), (-0.49, -1.81)],
        # },
        # 7: {
        #     'obstacles': [(-1.33, 1.38), (2.26, 0.24), (0.01, -0.99), (-1.11, -2.20), (-2.04, -0.78), (-1.79, -1.15)],
        #     'egos': [(-0.34, 0.23), (-1.34, -1.37), (1.19, 0.84), (2.24, -0.69), (-1.39, 0.78), (2.71, -1.49)],
        #     'targets': [(0.95, 2.22), (2.13, -2.11), (1.10, -1.39), (0.66, 1.14), (-0.95, 1.33), (0.64, -0.82)],
        # },
        # 8: {
        #     'obstacles': [(1.67, 1.29), (-1.23, 1.65), (-1.05, -0.08), (-1.75, 1.90), (1.43, 0.44), (-2.23, 0.70)],
        #     'egos': [(1.17, 2.31), (-2.67, 1.00), (0.48, -2.41), (-2.21, 2.04), (-1.56, 1.61), (-0.54, -1.28)],
        #     'targets': [(0.22, -0.20), (0.84, 0.02), (0.36, -0.82), (-0.34, 0.08), (1.73, -0.78), (-0.27, -0.28)],
        # },
        # 9: {
        #     'obstacles': [(-0.87, 2.09), (0.04, -1.97), (-0.67, 0.65), (-1.05, 1.50), (2.24, -0.30), (0.33, -1.78)],
        #     'egos': [(-1.89, -1.63), (-0.43, 1.75), (1.52, 1.75), (-1.65, -0.47), (-0.09, 0.51), (-0.92, 2.37)],
        #     'targets': [(-1.20, -0.65), (-0.87, 1.04), (1.07, -1.85), (0.10, 1.87), (1.52, -0.43), (1.17, -0.25)],
        # },
    }

# Usage in your main program:
# import numpy as np
# from scenarios import Scenarios
#
# In reset_world:
# sid = np.random.randint(0, 10)
# scenario = Scenarios.data[sid]
#
# # Assign obstacles
# for i, (x, y) in enumerate(scenario['obstacles']):
#     world.obstacles[i].state.p_pos = np.array([x, y])
#     world.obstacles[i].state.p_vel = np.zeros(world.dim_p)
#
# # Assign egos
# for i, (x, y) in enumerate(scenario['egos']):
#     world.egos[i].state.p_pos = np.array([x, y])
#     world.egos[i].state.p_vel = np.zeros(world.dim_p)
#     # Goal is target position (assuming targets correspond to egos by index)
#     tx, ty = scenario['targets'][i]
#     world.egos[i].goal = np.array([tx, ty])
#
# # Assign targets
# for i, (x, y) in enumerate(scenario['targets']):
#     world.targets[i].state.p_pos = np.array([x, y])
#     world.targets[i].state.p_vel = np.zeros(world.dim_p)